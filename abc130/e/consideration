## e.g. 1
- S: 1 3
  - (), (1), (3), (1, 3)
- T: 3 1
  - (), (1), (3), (3, 1)
- answer: 3

## brute force
- Try all case
  - O(2 ** N * 2 ** M)

## dp
- dp[i][j] ... The count of same number in S[0..i] and T[0..j].
  - If S[i+1] == T[j+1], then dp[i+1][j+1] = dp[i][j] * 2
  - If S[i+1] != T[i+1], then dp[i+1][j+1] = dp[i][j]
- dp[0][0] = 1.

## e.g. 1
- S[1] = 1, S[2] = 3
- T[1] = 3, S[2] = 1

- dp[0][0] = 1
  - ()
- dp[1][1] = 1
  - ()
- dp[1][2] = 2
  - (), (1)
- dp[2][1] = 2
  - (), (3)
- dp[2][2] = 3
  - (), (1), (3)


## e.g. x
- S[1] = 1, S[2] = 3, S[3] = 1
- T[1] = 3, S[2] = 1, T[3] = 3
- dp[0][0] = 1
  - ()
- dp[1][1] = 1
  - ()
- dp[1][2] = 2
  - (), (1)
- dp[2][1] = 2
  - (), (3)
- dp[2][2] = 3
  - (), (1), (3)
- dp[3][2] = 4
  - (), (1)1, (3), (1)2
- dp[2][3] = 4
  - (), (1), (3)1, (3)2
- dp[3][3] = 5
  - (), (1)1, (1)2, (3)1, (3)2

## consideration
- The each number is included to the answer.
-
