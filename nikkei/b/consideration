## cons
- D1 must be 0 (same with 1)
- if D[i] + 1 == D[j], then D[i] must be the child of D[j]

## ans
- 個数
  - condition を定義して、その condition を満たすパターンを全部かぞえあげる

## step
- 同じ値をもつ D をグルーピングする
  - 0, 1, 2, ...
- if D[i] + 1 == D[j], then D[i] must be the child of D[j]
  - つまり、「1 つ大きいグループは、その上のグループの任意の1つを選んで自分を追加する」と考えることができる
    - ここで、グループ内の個数だけ場合の数が掛け算で増える

## ans2
- d: 「step 数のグループ」
  - d[0], d[1], d[2], ...
- d[0] = 1
  - これだけ、D1 という制約。
- d[i] ...
  - 「間が空いてはいけない」という制約。
  - これさえ満たせば、「1つ上から選ぶ」を愚直に繰り返せば良い
    - pow(d[i], d[i-1])
      - d[i] この要素をつける先を d[i-1] から選ぶ、dup 許すので pow


## cond
- D1 = 0
- D[
